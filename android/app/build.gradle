plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

dependencies {
    implementation("com.google.android.material:material:1.12.0")
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('../income-expense-budget-plan-key/android/key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

kotlin {
    jvmToolchain(17) // Java version defined here
}

android {
    namespace = "com.dbaotrung.income_expense_budget_plan"
    compileSdk = flutter.compileSdkVersion
    // ndkVersion = flutter.ndkVersion
    ndkVersion = ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "com.dbaotrung.income_expense_budget_plan"
        // Android 15 (API level 35)
        // Android 14 (API level 34)
        // Android 13 (API level 33)
        // Android 12 (API levels 31, 32)
        // Android 11 (API level 30)
        // Android 10 (API level 29)
        // Android 9 (API level 28)
        // Android 8.1 (API level 27)
        // Android 8.0 (API level 26)
        // Android 7.1 (API level 25)
        // Android 7.0 (API level 24)
        minSdk = 24
        // targetSdk = flutter.targetSdkVersion
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            debugSymbolLevel 'FULL'
        }
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
            // Enable ProGuard to shrink and obfuscate the code
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Enable the generation of debug symbols
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }
}

flutter {
    source = "../.."
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
